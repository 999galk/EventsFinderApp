{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Gal\\\\Desktop\\\\Udemy\\\\event_finder_app\\\\src\\\\components\\\\SearchBar.js\";\nimport React from 'react';\nimport { CountryDropdown } from 'react-country-region-selector';\nimport { getCode } from 'country-list';\nimport CityDropdown from './CityDropdown';\n\nclass SearchBar extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.getCountryCode = () => {\n      console.log('getCountryCode');\n      const countryName = this.state.country;\n      console.log('name:', countryName);\n      console.log('code:', getCode(countryName));\n      this.setState({\n        countryCode: getCode(countryName)\n      }, this.getCitiesOfCountry);\n    };\n\n    this.createCalendar = () => {\n      const city = this.state.city;\n      const countryCode = this.state.countryCode;\n      const calDiv = document.getElementById('calendar');\n      const div = document.createElement('div');\n      div.id = 'innerCalendar';\n      div.setAttribute('w-type', 'calendar');\n      calDiv.appendChild(div);\n    };\n\n    this.getCitiesOfCountry = () => {\n      console.log('code in get:', this.state.countryCode);\n      fetch('http://localhost:5000/cities', {\n        method: 'post',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          code: this.state.countryCode\n        })\n      }).then(res => res.json()).then(data => {\n        this.setState({\n          cityList: data\n        }, this.updateOptions);\n      });\n    };\n\n    this.updateOptions = () => {\n      const cities = this.state.cityList;\n      console.log('cities in dropdown:', cities);\n      const div = document.getElementById('cities');\n\n      if (div.childElementCount) {\n        let select = document.getElementById('citySelector');\n        select.remove();\n      }\n\n      const select = document.createElement('select');\n      select.id = 'citySelector';\n      select.addEventListener(\"change\", () => {\n        this.selectCity(select.value);\n      });\n      div.appendChild(select);\n      cities.forEach(city => {\n        let op = document.createElement('option');\n        op.textContent = city;\n        op.value = city;\n        select.appendChild(op);\n      }, this.setState({\n        city: cities[0]\n      }));\n    };\n\n    this.state = {\n      country: '',\n      countryCode: '',\n      city: '',\n      cityList: [],\n      period: ''\n    };\n  }\n\n  selectCountry(val) {\n    console.log('selectCountry');\n    this.setState({\n      country: val\n    }, this.getCountryCode);\n  }\n\n  selectCity(val) {\n    this.setState({\n      city: val\n    }, this.createCalendar);\n    console.log('in select city, val:', val); // fetch('http://localhost:5000/calendar', {\n    //      method: 'post',\n    //      headers: {'Content-Type': 'application/json'},\n    //      body: JSON.stringify({\n    //        code: this.state.countryCode,\n    //        city : val\n    //      })\n    //    })\n    //    .then(res => res.json())\n    //    .then(data => {\n    //    \tconsole.log(data);\n    //    })\n  }\n\n  componentDidMount() {\n    console.log('componentDidMount');\n    const script = document.createElement(\"script\");\n    script.async = true;\n    script.src = \"https://ticketmaster-api-staging.github.io/products-and-docs/widgets/calendar/1.0.0/lib/main-widget.js\";\n    const calDiv = document.getElementById('calendar');\n    calDiv.appendChild(script);\n  }\n\n  render() {\n    const _this$state = this.state,\n          country = _this$state.country,\n          city = _this$state.city,\n          countryCode = _this$state.countryCode;\n    console.log('render', countryCode);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        display: 'flex'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(CountryDropdown, {\n      value: country,\n      onChange: val => this.selectCountry(val),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      id: \"cities\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      id: \"calendar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default SearchBar;","map":{"version":3,"sources":["C:/Users/Gal/Desktop/Udemy/event_finder_app/src/components/SearchBar.js"],"names":["React","CountryDropdown","getCode","CityDropdown","SearchBar","Component","constructor","props","getCountryCode","console","log","countryName","state","country","setState","countryCode","getCitiesOfCountry","createCalendar","city","calDiv","document","getElementById","div","createElement","id","setAttribute","appendChild","fetch","method","headers","body","JSON","stringify","code","then","res","json","data","cityList","updateOptions","cities","childElementCount","select","remove","addEventListener","selectCity","value","forEach","op","textContent","period","selectCountry","val","componentDidMount","script","async","src","render","display"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,eAAT,QAAgC,+BAAhC;AACA,SAASC,OAAT,QAAwB,cAAxB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;;AAEA,MAAMC,SAAN,SAAwBJ,KAAK,CAACK,SAA9B,CAAwC;AACvCC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACjB,UAAMA,KAAN;;AADiB,SAgBlBC,cAhBkB,GAgBD,MAAM;AACtBC,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACA,YAAMC,WAAW,GAAG,KAAKC,KAAL,CAAWC,OAA/B;AACAJ,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAoBC,WAApB;AACAF,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBR,OAAO,CAACS,WAAD,CAA5B;AACA,WAAKG,QAAL,CAAc;AAACC,QAAAA,WAAW,EAAGb,OAAO,CAACS,WAAD;AAAtB,OAAd,EAAoD,KAAKK,kBAAzD;AACA,KAtBiB;;AAAA,SA0ClBC,cA1CkB,GA0CD,MAAK;AACrB,YAAMC,IAAI,GAAG,KAAKN,KAAL,CAAWM,IAAxB;AACA,YAAMH,WAAW,GAAG,KAAKH,KAAL,CAAWG,WAA/B;AACA,YAAMI,MAAM,GAAGC,QAAQ,CAACC,cAAT,CAAwB,UAAxB,CAAf;AACA,YAAMC,GAAG,GAAGF,QAAQ,CAACG,aAAT,CAAuB,KAAvB,CAAZ;AACAD,MAAAA,GAAG,CAACE,EAAJ,GAAO,eAAP;AACAF,MAAAA,GAAG,CAACG,YAAJ,CAAiB,QAAjB,EAA2B,UAA3B;AACAN,MAAAA,MAAM,CAACO,WAAP,CAAmBJ,GAAnB;AAGA,KApDiB;;AAAA,SAsDlBN,kBAtDkB,GAsDG,MAAM;AAC1BP,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4B,KAAKE,KAAL,CAAWG,WAAvC;AACAY,MAAAA,KAAK,CAAC,8BAAD,EAAiC;AACjCC,QAAAA,MAAM,EAAE,MADyB;AAEjCC,QAAAA,OAAO,EAAE;AAAC,0BAAgB;AAAjB,SAFwB;AAGjCC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBC,UAAAA,IAAI,EAAE,KAAKrB,KAAL,CAAWG;AADE,SAAf;AAH2B,OAAjC,CAAL,CAOImB,IAPJ,CAOSC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAPhB,EAQIF,IARJ,CAQSG,IAAI,IAAI;AACb,aAAKvB,QAAL,CAAc;AAACwB,UAAAA,QAAQ,EAAGD;AAAZ,SAAd,EAAiC,KAAKE,aAAtC;AACA,OAVJ;AAWA,KAnEiB;;AAAA,SAqElBA,aArEkB,GAqEF,MAAM;AACrB,YAAMC,MAAM,GAAG,KAAK5B,KAAL,CAAW0B,QAA1B;AACG7B,MAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmC8B,MAAnC;AACA,YAAMlB,GAAG,GAAGF,QAAQ,CAACC,cAAT,CAAwB,QAAxB,CAAZ;;AACA,UAAIC,GAAG,CAACmB,iBAAR,EAA0B;AACzB,YAAIC,MAAM,GAAGtB,QAAQ,CAACC,cAAT,CAAwB,cAAxB,CAAb;AACAqB,QAAAA,MAAM,CAACC,MAAP;AACA;;AACD,YAAMD,MAAM,GAAGtB,QAAQ,CAACG,aAAT,CAAuB,QAAvB,CAAf;AACAmB,MAAAA,MAAM,CAAClB,EAAP,GAAY,cAAZ;AACAkB,MAAAA,MAAM,CAACE,gBAAP,CAAwB,QAAxB,EAAkC,MAAM;AAAC,aAAKC,UAAL,CAAgBH,MAAM,CAACI,KAAvB;AAA8B,OAAvE;AACAxB,MAAAA,GAAG,CAACI,WAAJ,CAAgBgB,MAAhB;AACAF,MAAAA,MAAM,CAACO,OAAP,CAAe7B,IAAI,IAAI;AACtB,YAAI8B,EAAE,GAAG5B,QAAQ,CAACG,aAAT,CAAuB,QAAvB,CAAT;AACAyB,QAAAA,EAAE,CAACC,WAAH,GAAiB/B,IAAjB;AACA8B,QAAAA,EAAE,CAACF,KAAH,GAAW5B,IAAX;AACAwB,QAAAA,MAAM,CAAChB,WAAP,CAAmBsB,EAAnB;AACC,OALF,EAKI,KAAKlC,QAAL,CAAc;AAACI,QAAAA,IAAI,EAAGsB,MAAM,CAAC,CAAD;AAAd,OAAd,CALJ;AAMH,KAvFiB;;AAEjB,SAAK5B,KAAL,GAAa;AACZC,MAAAA,OAAO,EAAG,EADE;AAEZE,MAAAA,WAAW,EAAG,EAFF;AAGZG,MAAAA,IAAI,EAAG,EAHK;AAIZoB,MAAAA,QAAQ,EAAG,EAJC;AAKZY,MAAAA,MAAM,EAAG;AALG,KAAb;AAOA;;AAEDC,EAAAA,aAAa,CAAEC,GAAF,EAAO;AACnB3C,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACG,SAAKI,QAAL,CAAc;AAAED,MAAAA,OAAO,EAAEuC;AAAX,KAAd,EAA+B,KAAK5C,cAApC;AACH;;AAUDqC,EAAAA,UAAU,CAAEO,GAAF,EAAO;AACb,SAAKtC,QAAL,CAAc;AAAEI,MAAAA,IAAI,EAAEkC;AAAR,KAAd,EAA6B,KAAKnC,cAAlC;AACAR,IAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAoC0C,GAApC,EAFa,CAIhB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAiDDC,EAAAA,iBAAiB,GAAG;AACnB5C,IAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACG,UAAM4C,MAAM,GAAGlC,QAAQ,CAACG,aAAT,CAAuB,QAAvB,CAAf;AACA+B,IAAAA,MAAM,CAACC,KAAP,GAAe,IAAf;AACAD,IAAAA,MAAM,CAACE,GAAP,GAAa,wGAAb;AACA,UAAMrC,MAAM,GAAGC,QAAQ,CAACC,cAAT,CAAwB,UAAxB,CAAf;AACAF,IAAAA,MAAM,CAACO,WAAP,CAAmB4B,MAAnB;AACD;;AAEDG,EAAAA,MAAM,GAAE;AAAA,wBAC8B,KAAK7C,KADnC;AAAA,UACAC,OADA,eACAA,OADA;AAAA,UACSK,IADT,eACSA,IADT;AAAA,UACeH,WADf,eACeA,WADf;AAEPN,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBK,WAAtB;AACF,WACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAK,MAAA,KAAK,EAAE;AAAC2C,QAAAA,OAAO,EAAC;AAAT,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,oBAAC,eAAD;AACQ,MAAA,KAAK,EAAE7C,OADf;AAEQ,MAAA,QAAQ,EAAGuC,GAAD,IAAS,KAAKD,aAAL,CAAmBC,GAAnB,CAF3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,EAIC;AAAK,MAAA,EAAE,EAAC,QAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJD,CADD,EAQC;AAAK,MAAA,EAAE,EAAC,UAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARD,CADD;AAaA;;AAnHsC;;AAsHxC,eAAehD,SAAf","sourcesContent":["import React from 'react';\r\nimport { CountryDropdown } from 'react-country-region-selector';\r\nimport { getCode } from 'country-list';\r\nimport CityDropdown from './CityDropdown';\r\n\r\nclass SearchBar extends React.Component {\r\n\tconstructor(props){\r\n\t\tsuper(props)\r\n\t\tthis.state = {\r\n\t\t\tcountry : '',\r\n\t\t\tcountryCode : '',\r\n\t\t\tcity : '',\r\n\t\t\tcityList : [],\r\n\t\t\tperiod : ''\r\n\t\t}\r\n\t}\r\n\r\n\tselectCountry (val) {\r\n\t\tconsole.log('selectCountry');\r\n\t    this.setState({ country: val },this.getCountryCode);\r\n\t}\r\n\r\n\tgetCountryCode = () => {\r\n\t\tconsole.log('getCountryCode');\r\n\t\tconst countryName = this.state.country;\r\n\t\tconsole.log('name:',countryName);\r\n\t\tconsole.log('code:', getCode(countryName));\r\n\t\tthis.setState({countryCode : getCode(countryName)}, this.getCitiesOfCountry);\r\n\t}\r\n\r\n\tselectCity (val) {\r\n\t    this.setState({ city: val }, this.createCalendar);\r\n\t    console.log('in select city, val:', val);\r\n\r\n\t\t// fetch('http://localhost:5000/calendar', {\r\n\t //      method: 'post',\r\n\t //      headers: {'Content-Type': 'application/json'},\r\n\t //      body: JSON.stringify({\r\n\t //        code: this.state.countryCode,\r\n\t //        city : val\r\n\t //      })\r\n\t //    })\r\n\t //    .then(res => res.json())\r\n\t //    .then(data => {\r\n\t //    \tconsole.log(data);\r\n\t //    })\r\n\t}\r\n\r\n\tcreateCalendar = () =>{\r\n\t\tconst city = this.state.city;\r\n\t\tconst countryCode = this.state.countryCode;\r\n\t\tconst calDiv = document.getElementById('calendar');\r\n\t\tconst div = document.createElement('div');\r\n\t\tdiv.id='innerCalendar';\r\n\t\tdiv.setAttribute('w-type', 'calendar');\r\n\t\tcalDiv.appendChild(div);\r\n\t\t\r\n\r\n\t}\r\n\r\n\tgetCitiesOfCountry = () => {\r\n\t\tconsole.log('code in get:', this.state.countryCode);\r\n\t\tfetch('http://localhost:5000/cities', {\r\n\t      method: 'post',\r\n\t      headers: {'Content-Type': 'application/json'},\r\n\t      body: JSON.stringify({\r\n\t        code: this.state.countryCode\r\n\t      })\r\n\t    })\r\n\t    .then(res => res.json())\r\n\t    .then(data => {\r\n\t    \tthis.setState({cityList : data}, this.updateOptions);\r\n\t    })\r\n\t}\r\n\r\n\tupdateOptions = () => {\r\n\t\tconst cities = this.state.cityList;\r\n\t    console.log('cities in dropdown:', cities);\r\n\t    const div = document.getElementById('cities');\r\n\t    if (div.childElementCount){\r\n\t    \tlet select = document.getElementById('citySelector');\r\n\t    \tselect.remove();\r\n\t    }\r\n    \tconst select = document.createElement('select');\r\n    \tselect.id = 'citySelector';\r\n    \tselect.addEventListener(\"change\", () => {this.selectCity(select.value)});\r\n\t    div.appendChild(select);\r\n\t    cities.forEach(city => {\r\n\t    \tlet op = document.createElement('option');\r\n\t    \top.textContent = city;\r\n\t    \top.value = city;\r\n\t    \tselect.appendChild(op);\r\n\t    \t}, this.setState({city : cities[0]}))  \r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tconsole.log('componentDidMount');\r\n\t    const script = document.createElement(\"script\");\r\n\t    script.async = true;\r\n\t    script.src = \"https://ticketmaster-api-staging.github.io/products-and-docs/widgets/calendar/1.0.0/lib/main-widget.js\";\r\n\t    const calDiv = document.getElementById('calendar');\r\n\t    calDiv.appendChild(script);\r\n  \t}\r\n\r\n  \trender(){\r\n  \t\tconst {country, city, countryCode} = this.state;\r\n  \t\tconsole.log('render', countryCode);\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<div style={{display:'flex'}}>\r\n\t\t\t\t\t<CountryDropdown\r\n\t\t\t          value={country}\r\n\t\t\t          onChange={(val) => this.selectCountry(val)}/>\r\n\t\t\t\t\t<div id='cities'>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div id='calendar'>\r\n\t\t\t    </div>\r\n\t\t    </div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default SearchBar;"]},"metadata":{},"sourceType":"module"}