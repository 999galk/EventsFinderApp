{"ast":null,"code":"const Pbf = require('pbf');\n\nconst fs = require('fs');\n\nconst path = require('path');\n\nvar pbf = new Pbf(fs.readFileSync(path.join(__dirname, 'cities.pbf')));\nvar cities = [];\nvar lastLat = 0;\nvar lastLon = 0;\n\nwhile (pbf.pos < pbf.length) {\n  cities.push(pbf.readMessage(readCity, {\n    cityId: '',\n    name: '',\n    altName: '',\n    country: '',\n    featureCode: '',\n    adminCode: '',\n    population: 0,\n    loc: {\n      type: 'Point',\n      coordinates: [0, 0] //[lon,lat]\n\n    }\n  }));\n}\n\nmodule.exports = cities;\n\nfunction readCity(tag, city, pbf) {\n  if (tag === 1) city.cityId = pbf.readSVarint();else if (tag === 2) city.name = pbf.readString();else if (tag === 3) city.country = pbf.readString();else if (tag === 4) city.altName = pbf.readString();else if (tag === 5) city.muni = pbf.readString();else if (tag === 6) city.muniSub = pbf.readString();else if (tag === 7) city.featureCode = pbf.readString();else if (tag === 8) city.adminCode = pbf.readString();else if (tag === 9) city.population = pbf.readVarint();else if (tag === 10) {\n    lastLon += pbf.readSVarint();\n    city.loc.coordinates[0] = lastLon / 1e5;\n  } else if (tag === 11) {\n    lastLat += pbf.readSVarint();\n    city.loc.coordinates[1] = lastLat / 1e5;\n  }\n}","map":{"version":3,"sources":["C:/Users/Gal/Desktop/Udemy/event_finder_app/node_modules/all-the-cities/index.js"],"names":["Pbf","require","fs","path","pbf","readFileSync","join","__dirname","cities","lastLat","lastLon","pos","length","push","readMessage","readCity","cityId","name","altName","country","featureCode","adminCode","population","loc","type","coordinates","module","exports","tag","city","readSVarint","readString","muni","muniSub","readVarint"],"mappings":"AAAA,MAAMA,GAAG,GAAGC,OAAO,CAAC,KAAD,CAAnB;;AACA,MAAMC,EAAE,GAAGD,OAAO,CAAC,IAAD,CAAlB;;AACA,MAAME,IAAI,GAAGF,OAAO,CAAC,MAAD,CAApB;;AAEA,IAAIG,GAAG,GAAG,IAAIJ,GAAJ,CAAQE,EAAE,CAACG,YAAH,CAAgBF,IAAI,CAACG,IAAL,CAAUC,SAAV,EAAqB,YAArB,CAAhB,CAAR,CAAV;AACA,IAAIC,MAAM,GAAG,EAAb;AAEA,IAAIC,OAAO,GAAG,CAAd;AACA,IAAIC,OAAO,GAAG,CAAd;;AACA,OAAON,GAAG,CAACO,GAAJ,GAAUP,GAAG,CAACQ,MAArB,EAA6B;AACzBJ,EAAAA,MAAM,CAACK,IAAP,CAAYT,GAAG,CAACU,WAAJ,CAAgBC,QAAhB,EAA0B;AAClCC,IAAAA,MAAM,EAAE,EAD0B;AAElCC,IAAAA,IAAI,EAAE,EAF4B;AAGlCC,IAAAA,OAAO,EAAC,EAH0B;AAIlCC,IAAAA,OAAO,EAAE,EAJyB;AAKlCC,IAAAA,WAAW,EAAE,EALqB;AAMlCC,IAAAA,SAAS,EAAE,EANuB;AAOlCC,IAAAA,UAAU,EAAE,CAPsB;AAQlCC,IAAAA,GAAG,EAAE;AACDC,MAAAA,IAAI,EAAE,OADL;AAEDC,MAAAA,WAAW,EAAE,CAAC,CAAD,EAAI,CAAJ,CAFZ,CAEmB;;AAFnB;AAR6B,GAA1B,CAAZ;AAaH;;AAEDC,MAAM,CAACC,OAAP,GAAiBnB,MAAjB;;AAEA,SAASO,QAAT,CAAkBa,GAAlB,EAAuBC,IAAvB,EAA6BzB,GAA7B,EAAkC;AAC9B,MAAIwB,GAAG,KAAK,CAAZ,EAAeC,IAAI,CAACb,MAAL,GAAcZ,GAAG,CAAC0B,WAAJ,EAAd,CAAf,KACK,IAAIF,GAAG,KAAK,CAAZ,EAAeC,IAAI,CAACZ,IAAL,GAAYb,GAAG,CAAC2B,UAAJ,EAAZ,CAAf,KACA,IAAIH,GAAG,KAAK,CAAZ,EAAeC,IAAI,CAACV,OAAL,GAAef,GAAG,CAAC2B,UAAJ,EAAf,CAAf,KACA,IAAIH,GAAG,KAAK,CAAZ,EAAeC,IAAI,CAACX,OAAL,GAAed,GAAG,CAAC2B,UAAJ,EAAf,CAAf,KACA,IAAIH,GAAG,KAAK,CAAZ,EAAeC,IAAI,CAACG,IAAL,GAAY5B,GAAG,CAAC2B,UAAJ,EAAZ,CAAf,KACA,IAAIH,GAAG,KAAK,CAAZ,EAAeC,IAAI,CAACI,OAAL,GAAe7B,GAAG,CAAC2B,UAAJ,EAAf,CAAf,KACA,IAAIH,GAAG,KAAK,CAAZ,EAAeC,IAAI,CAACT,WAAL,GAAmBhB,GAAG,CAAC2B,UAAJ,EAAnB,CAAf,KACA,IAAIH,GAAG,KAAK,CAAZ,EAAeC,IAAI,CAACR,SAAL,GAAiBjB,GAAG,CAAC2B,UAAJ,EAAjB,CAAf,KACA,IAAIH,GAAG,KAAK,CAAZ,EAAeC,IAAI,CAACP,UAAL,GAAkBlB,GAAG,CAAC8B,UAAJ,EAAlB,CAAf,KACA,IAAIN,GAAG,KAAK,EAAZ,EAAgB;AACjBlB,IAAAA,OAAO,IAAIN,GAAG,CAAC0B,WAAJ,EAAX;AACAD,IAAAA,IAAI,CAACN,GAAL,CAASE,WAAT,CAAqB,CAArB,IAA0Bf,OAAO,GAAG,GAApC;AACH,GAHI,MAGE,IAAIkB,GAAG,KAAK,EAAZ,EAAgB;AACnBnB,IAAAA,OAAO,IAAIL,GAAG,CAAC0B,WAAJ,EAAX;AACAD,IAAAA,IAAI,CAACN,GAAL,CAASE,WAAT,CAAqB,CAArB,IAA0BhB,OAAO,GAAG,GAApC;AACH;AACJ","sourcesContent":["const Pbf = require('pbf')\nconst fs = require('fs')\nconst path = require('path')\n\nvar pbf = new Pbf(fs.readFileSync(path.join(__dirname, 'cities.pbf')))\nvar cities = []\n\nvar lastLat = 0\nvar lastLon = 0\nwhile (pbf.pos < pbf.length) {\n    cities.push(pbf.readMessage(readCity, {\n        cityId: '',\n        name: '',\n        altName:'',\n        country: '',\n        featureCode: '',\n        adminCode: '',\n        population: 0,\n        loc: {\n            type: 'Point',\n            coordinates: [0, 0] //[lon,lat]\n        }\n    }))\n}\n\nmodule.exports = cities\n\nfunction readCity(tag, city, pbf) {\n    if (tag === 1) city.cityId = pbf.readSVarint()\n    else if (tag === 2) city.name = pbf.readString()\n    else if (tag === 3) city.country = pbf.readString()\n    else if (tag === 4) city.altName = pbf.readString()\n    else if (tag === 5) city.muni = pbf.readString()\n    else if (tag === 6) city.muniSub = pbf.readString()\n    else if (tag === 7) city.featureCode = pbf.readString()\n    else if (tag === 8) city.adminCode = pbf.readString()\n    else if (tag === 9) city.population = pbf.readVarint()\n    else if (tag === 10) {\n        lastLon += pbf.readSVarint()\n        city.loc.coordinates[0] = lastLon / 1e5\n    } else if (tag === 11) {\n        lastLat += pbf.readSVarint()\n        city.loc.coordinates[1] = lastLat / 1e5\n    }\n}\n"]},"metadata":{},"sourceType":"script"}