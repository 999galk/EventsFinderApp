{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Gal\\\\Desktop\\\\Udemy\\\\event_finder_app\\\\src\\\\components\\\\SearchBar.js\";\nimport React from 'react';\nimport { CountryDropdown } from 'react-country-region-selector';\nimport { getCode } from 'country-list';\nconst initialState = {\n  country: '',\n  countryCode: '',\n  city: '',\n  cityList: [],\n  period: '',\n  calChanged: false,\n  supportedCountryCode: [\"US\", \"AU\", \"AT\", \"BE\", \"CA\", \"CZ\", \"DK\", \"FI\", \"FR\", \"DE\", \"GB\", \"IE\", \"LU\", \"MX\", \"NL\", \"NZ\", \"NO\", \"PL\", \"PT\", \"ES\", \"SE\", \"CH\", \"AE\"]\n};\n\nclass SearchBar extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.getCountryCode = () => {\n      const countryName = this.state.country;\n\n      if (countryName === 'United States') {\n        this.setState({\n          countryCode: 'US'\n        }, this.getCitiesOfCountry);\n      } else {\n        this.setState({\n          countryCode: getCode(countryName)\n        }, this.getCitiesOfCountry);\n      }\n    };\n\n    this.onCityChange = () => {\n      const val = document.getElementById('citySelector').value;\n\n      if (this.props.calChanged === true) {\n        this.props.onSearchChange(false, '', '');\n      }\n\n      this.props.onSearchChange(true, val, this.state.countryCode);\n      this.setState(initialState);\n    };\n\n    this.getCitiesOfCountry = () => {\n      fetch('http://localhost:5000/cities', {\n        method: 'post',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          code: this.state.countryCode\n        })\n      }).then(res => res.json()).then(data => {\n        this.setState({\n          cityList: data\n        }, this.updateCityOptions);\n      });\n    };\n\n    this.removeCities = select => {\n      if (select.childElementCount) {\n        for (let i = 0; i < select.childElementCount; i++) {\n          select.children[i].remove();\n        }\n      }\n    };\n\n    this.updateCityOptions = () => {\n      const cities = this.state.cityList;\n      let select = document.getElementById('citySelector');\n      removeCities(select);\n      cities.forEach(city => {\n        let op = document.createElement('option');\n        op.textContent = city;\n        op.value = city;\n        select.appendChild(op);\n      }, this.setState({\n        city: cities[0]\n      }));\n    };\n\n    this.state = initialState;\n  }\n\n  onCountryChange(val) {\n    this.setState({\n      country: val\n    }, this.getCountryCode);\n  }\n\n  componentDidMount() {\n    this.forceUpdate();\n  }\n\n  render() {\n    const _this$state = this.state,\n          country = _this$state.country,\n          city = _this$state.city,\n          supportedCountryCode = _this$state.supportedCountryCode;\n    return React.createElement(\"div\", {\n      className: \"pa5\",\n      style: {\n        paddingRight: '6rem',\n        paddingLeft: '5rem'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, \" Where are you traveling to?\"), React.createElement(\"div\", {\n      className: \"br3 pa5 ma3 ml5 mr5 shadow-5\",\n      style: {\n        display: 'flex',\n        justifyContent: 'center',\n        flexWrap: 'wrap',\n        backgroundColor: '#24478f'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(CountryDropdown, {\n      className: \"pa3 ba br3 b--blue bg-lightest-blue ma2 mw5\",\n      value: country,\n      onChange: val => this.onCountryChange(val),\n      whitelist: supportedCountryCode,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      id: \"cities\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(\"select\", {\n      id: \"citySelector\",\n      className: \"pa3 ba br3 b--blue bg-lightest-blue ma2 mw5\",\n      onChange: this.onCityChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, \"Select City\")))));\n  }\n\n}\n\nexport default SearchBar;","map":{"version":3,"sources":["C:/Users/Gal/Desktop/Udemy/event_finder_app/src/components/SearchBar.js"],"names":["React","CountryDropdown","getCode","initialState","country","countryCode","city","cityList","period","calChanged","supportedCountryCode","SearchBar","Component","constructor","props","getCountryCode","countryName","state","setState","getCitiesOfCountry","onCityChange","val","document","getElementById","value","onSearchChange","fetch","method","headers","body","JSON","stringify","code","then","res","json","data","updateCityOptions","removeCities","select","childElementCount","i","children","remove","cities","forEach","op","createElement","textContent","appendChild","onCountryChange","componentDidMount","forceUpdate","render","paddingRight","paddingLeft","display","justifyContent","flexWrap","backgroundColor"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { CountryDropdown } from 'react-country-region-selector';\r\nimport { getCode } from 'country-list';\r\n\r\n\r\nconst initialState = {\r\n\tcountry : '',\r\n\tcountryCode : '',\r\n\tcity : '',\r\n\tcityList : [],\r\n\tperiod : '',\r\n\tcalChanged : false,\r\n\tsupportedCountryCode : [\"US\", \"AU\", \"AT\", \"BE\", \"CA\", \"CZ\", \"DK\", \"FI\", \"FR\", \"DE\", \"GB\", \"IE\", \"LU\", \"MX\", \"NL\", \"NZ\", \"NO\", \"PL\", \"PT\", \"ES\", \"SE\", \"CH\", \"AE\"]\r\n}\r\n\r\nclass SearchBar extends React.Component {\r\n\tconstructor(props){\r\n\t\tsuper(props)\r\n\t\tthis.state = initialState;\r\n\t}\r\n\r\n\tonCountryChange (val) {\r\n\t    this.setState({ country: val },this.getCountryCode);\r\n\t}\r\n\r\n\r\n\tgetCountryCode = () => {\r\n\t\tconst countryName = this.state.country;\r\n\t\tif(countryName === 'United States'){\r\n\t\t\tthis.setState({countryCode : 'US'}, this.getCitiesOfCountry);\r\n\t\t}else{\r\n\t\t\tthis.setState({countryCode : getCode(countryName)}, this.getCitiesOfCountry);\r\n\t\t}\r\n\t}\r\n\r\n\tonCityChange = () => {\r\n\t\tconst val = document.getElementById('citySelector').value;\r\n\t    if(this.props.calChanged === true){\r\n\t      this.props.onSearchChange(false, '', '');\r\n\t    }\r\n\t    this.props.onSearchChange(true, val, this.state.countryCode);\r\n\t\tthis.setState(initialState);\r\n  \t}\r\n\r\n\tgetCitiesOfCountry = () => {\r\n\t\tfetch('http://localhost:5000/cities', {\r\n\t      method: 'post',\r\n\t      headers: {'Content-Type': 'application/json'},\r\n\t      body: JSON.stringify({\r\n\t        code: this.state.countryCode\r\n\t      })\r\n\t    })\r\n\t    .then(res => res.json())\r\n\t    .then(data => {\r\n\t    \tthis.setState({cityList : data}, this.updateCityOptions);\r\n\t    })\r\n\t}\r\n\r\n\tremoveCities = (select) => {\r\n\t\tif(select.childElementCount){\r\n\t\t\tfor(let i=0;i<select.childElementCount;i++){\r\n\t\t\t\tselect.children[i].remove();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\tupdateCityOptions = () => {\r\n\t\tconst cities = this.state.cityList;\r\n\t\tlet select = document.getElementById('citySelector');\r\n\t\tremoveCities(select);\r\n\t    cities.forEach(city => {\r\n\t    \tlet op = document.createElement('option');\r\n\t    \top.textContent = city;\r\n\t    \top.value = city;\r\n\t    \tselect.appendChild(op);\r\n\t    \t}, this.setState({city : cities[0]}))  \r\n\t}\r\n\r\n\t\r\n\r\n\t\r\n\tcomponentDidMount() {\r\n\t\tthis.forceUpdate();\r\n  \t}\r\n\r\n\r\n  \trender(){\r\n  \t\tconst {country, city, supportedCountryCode} = this.state;\r\n\t\treturn (\r\n\t\t\t<div className='pa5' style={{paddingRight:'6rem', paddingLeft:'5rem'}}>\r\n\t\t\t\t<h1> Where are you traveling to?</h1>\r\n\t\t\t\t<div className='br3 pa5 ma3 ml5 mr5 shadow-5' style={{display:'flex', justifyContent:'center', flexWrap: 'wrap', backgroundColor:'#24478f'}}>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t<CountryDropdown\r\n\t\t\t\t\tclassName='pa3 ba br3 b--blue bg-lightest-blue ma2 mw5'\r\n\t\t\t          value={country}\r\n\t\t\t          onChange={(val) => this.onCountryChange(val)}\r\n\t\t\t          whitelist={supportedCountryCode}/>\r\n\t\t\t         </div>\r\n\t\t\t\t\t<div id='cities'>\r\n\t\t\t\t\t\t<select id='citySelector' className='pa3 ba br3 b--blue bg-lightest-blue ma2 mw5' onChange={this.onCityChange}>\r\n\t\t\t\t\t\t\t<option value>Select City</option>\r\n\t\t\t\t\t\t</select>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default SearchBar;"]},"metadata":{},"sourceType":"module"}