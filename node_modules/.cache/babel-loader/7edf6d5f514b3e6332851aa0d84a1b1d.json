{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Gal\\\\Desktop\\\\Udemy\\\\event_finder_app\\\\src\\\\components\\\\CalendarTest.js\";\nimport React from 'react';\nimport { Calendar, momentLocalizer } from 'react-big-calendar';\nimport moment from 'moment';\nimport 'react-big-calendar/lib/sass/styles.scss';\nimport './Calendar.css';\nimport EventDetails from './EventDetails';\nconst localizer = momentLocalizer(moment);\n\nclass CalendarTest extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.SaveSearch = () => {\n      const data = this.state.events.filter(event => event.id === this.state.eventId);\n      console.log('data of event:', data);\n      fetch('http://localhost:5000/saveSearch', {\n        method: 'post',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          user: this.props.userId,\n          eventId: this.state.eventId,\n          eventTitle: this.state.eventTitle,\n          location: `${this.props.city} , ${this.props.countryCode}`,\n          description: `Details: ${this.state.eventLink}`,\n          start: Date.parse(data.start),\n          end: Date.parse(data.end)\n        })\n      }).then(response => response.json()).then(user => {\n        if (user[0] === parseInt(this.props.userId)) {\n          const btnDiv = document.getElementById('buttonDiv');\n          const msg = document.createElement(\"p\");\n          msg.textContent = \"Event saved to your calendar!\";\n          btnDiv.appendChild(msg);\n        }\n      });\n    };\n\n    this.getEvents = () => {\n      console.log('got to getEvents');\n      const fetchUrl = 'http://localhost:5000/calendar/' + this.props.countryCode + '/' + this.props.city;\n      fetch(fetchUrl).then(res => res.json()).then(data => {\n        let tempEventsArr = [];\n\n        if (data[Object.keys(data)[0]].events) {\n          const eventsArr = data[Object.keys(data)[0]].events;\n          tempEventsArr = eventsArr.map(event => {\n            const startDate = new Date(event.dates.start.dateTime);\n            const endDate = new Date(startDate + 1);\n            const obj = {\n              id: event.id,\n              title: event.name,\n              start: startDate,\n              end: endDate,\n              img: event.images[5].url,\n              ticketsUrl: event.url\n            };\n            return obj;\n          });\n        }\n\n        this.setState({\n          events: tempEventsArr\n        }, this.addClickFunctions);\n      });\n    };\n\n    this.addClickFunctions = () => {\n      console.log('got to add click functions');\n      const eventsClasses = document.querySelectorAll(\".rbc-event\");\n\n      if (eventsClasses) {\n        eventsClasses.forEach(div => {\n          const selectedEvent = this.getEventObj(div);\n          div.addEventListener(\"click\", () => {\n            console.log('recognized click, div:', div);\n            this.setState({\n              eventImg: selectedEvent[0].img,\n              eventLink: selectedEvent[0].ticketsUrl,\n              eventTitle: selectedEvent[0].title,\n              eventId: selectedEvent[0].id,\n              eventClicked: true\n            });\n          });\n        });\n      }\n    };\n\n    this.getEventObj = div => {\n      let title;\n\n      if (div.title) {\n        title = div.children[1].innerText;\n      } else {\n        title = div.firstElementChild.title;\n      }\n\n      const selectedEvent = this.state.events.filter(obj => obj.title === title);\n      return selectedEvent;\n    };\n\n    this.state = {\n      events: [],\n      eventTitle: 'Powered By',\n      eventImg: 'https://uk.tmconst.com/ccp-salesforce-images/DK/ticketmaster_guider_720x405.jpg',\n      eventLink: 'https://www.ticketmaster.com/',\n      eventId: '',\n      eventClicked: false\n    };\n  }\n\n  componentDidMount() {\n    if (this.props.city) {\n      console.log('cal did mount, going to get events');\n      this.getEvents();\n    }\n\n    const toolBar = document.getElementsByClassName('rbc-toolbar')[0];\n    toolBar.addEventListener(\"click\", () => {\n      console.log('click on toolbar');\n      this.getEvents();\n    });\n    const showMore = document.getElementsByClassName('rbc-show-more');\n\n    if (showMore) {\n      for (let i = 0; i < showMore.length; i++) {\n        showMore[i].addEventListener(\"click\", () => {\n          console.log('click on showMore');\n          this.getEvents();\n        });\n      }\n    }\n\n    window.onpopstate = this.props.onBackButtonEvent;\n  }\n\n  render() {\n    const _this$state = this.state,\n          events = _this$state.events,\n          eventImg = _this$state.eventImg,\n          eventLink = _this$state.eventLink,\n          eventTitle = _this$state.eventTitle,\n          eventClicked = _this$state.eventClicked;\n    const _this$props = this.props,\n          countryCode = _this$props.countryCode,\n          city = _this$props.city,\n          isSignedIn = _this$props.isSignedIn;\n    console.log('rendering calendar for city: ', city);\n    return React.createElement(\"div\", {\n      id: \"calendar\",\n      className: \"pa2 pb5 ma2 shadow-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, `Upcoming Events for ${this.props.city}:`), React.createElement(Calendar, {\n      localizer: localizer,\n      events: events,\n      startAccessor: \"start\",\n      endAccessor: \"end\",\n      style: {\n        height: 500\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'center'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, React.createElement(EventDetails, {\n      eventImg: eventImg,\n      eventLink: eventLink,\n      eventTitle: eventTitle,\n      isSignedIn: isSignedIn,\n      SaveSearch: this.SaveSearch,\n      eventClicked: eventClicked,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default CalendarTest;","map":{"version":3,"sources":["C:/Users/Gal/Desktop/Udemy/event_finder_app/src/components/CalendarTest.js"],"names":["React","Calendar","momentLocalizer","moment","EventDetails","localizer","CalendarTest","Component","constructor","props","SaveSearch","data","state","events","filter","event","id","eventId","console","log","fetch","method","headers","body","JSON","stringify","user","userId","eventTitle","location","city","countryCode","description","eventLink","start","Date","parse","end","then","response","json","parseInt","btnDiv","document","getElementById","msg","createElement","textContent","appendChild","getEvents","fetchUrl","res","tempEventsArr","Object","keys","eventsArr","map","startDate","dates","dateTime","endDate","obj","title","name","img","images","url","ticketsUrl","setState","addClickFunctions","eventsClasses","querySelectorAll","forEach","div","selectedEvent","getEventObj","addEventListener","eventImg","eventClicked","children","innerText","firstElementChild","componentDidMount","toolBar","getElementsByClassName","showMore","i","length","window","onpopstate","onBackButtonEvent","render","isSignedIn","height","display","justifyContent"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,eAAnB,QAA0C,oBAA1C;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAO,yCAAP;AACA,OAAO,gBAAP;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AAEA,MAAMC,SAAS,GAAGH,eAAe,CAACC,MAAD,CAAjC;;AAEA,MAAMG,YAAN,SAA2BN,KAAK,CAACO,SAAjC,CAA0C;AACzCC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACjB,UAAMA,KAAN;;AADiB,SAWlBC,UAXkB,GAWL,MAAM;AAClB,YAAMC,IAAI,GAAI,KAAKC,KAAL,CAAWC,MAAZ,CAAoBC,MAApB,CAA2BC,KAAK,IAAIA,KAAK,CAACC,EAAN,KAAa,KAAKJ,KAAL,CAAWK,OAA5D,CAAb;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BR,IAA9B;AAEAS,MAAAA,KAAK,CAAC,kCAAD,EAAqC;AACrCC,QAAAA,MAAM,EAAE,MAD6B;AAErCC,QAAAA,OAAO,EAAE;AAAC,0BAAgB;AAAjB,SAF4B;AAGrCC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBC,UAAAA,IAAI,EAAG,KAAKjB,KAAL,CAAWkB,MADC;AAEnBV,UAAAA,OAAO,EAAG,KAAKL,KAAL,CAAWK,OAFF;AAGnBW,UAAAA,UAAU,EAAG,KAAKhB,KAAL,CAAWgB,UAHL;AAInBC,UAAAA,QAAQ,EAAI,GAAE,KAAKpB,KAAL,CAAWqB,IAAK,MAAK,KAAKrB,KAAL,CAAWsB,WAAY,EAJvC;AAKnBC,UAAAA,WAAW,EAAI,YAAW,KAAKpB,KAAL,CAAWqB,SAAU,EAL5B;AAMnBC,UAAAA,KAAK,EAAGC,IAAI,CAACC,KAAL,CAAWzB,IAAI,CAACuB,KAAhB,CANW;AAOnBG,UAAAA,GAAG,EAAGF,IAAI,CAACC,KAAL,CAAWzB,IAAI,CAAC0B,GAAhB;AAPa,SAAf;AAH+B,OAArC,CAAL,CAaMC,IAbN,CAaWC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAbvB,EAcMF,IAdN,CAcWZ,IAAI,IAAI;AACZ,YAAIA,IAAI,CAAC,CAAD,CAAJ,KAAYe,QAAQ,CAAC,KAAKhC,KAAL,CAAWkB,MAAZ,CAAxB,EAA6C;AAC5C,gBAAMe,MAAM,GAAGC,QAAQ,CAACC,cAAT,CAAwB,WAAxB,CAAf;AACA,gBAAMC,GAAG,GAAGF,QAAQ,CAACG,aAAT,CAAuB,GAAvB,CAAZ;AACAD,UAAAA,GAAG,CAACE,WAAJ,GAAkB,+BAAlB;AACAL,UAAAA,MAAM,CAACM,WAAP,CAAmBH,GAAnB;AACA;AACF,OArBN;AAsBA,KArCiB;;AAAA,SAuClBI,SAvCkB,GAuCP,MAAM;AAChB/B,MAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACA,YAAM+B,QAAQ,GAAG,oCAAoC,KAAKzC,KAAL,CAAWsB,WAA/C,GAA6D,GAA7D,GAAmE,KAAKtB,KAAL,CAAWqB,IAA/F;AACAV,MAAAA,KAAK,CAAC8B,QAAD,CAAL,CACCZ,IADD,CACMa,GAAG,IAAIA,GAAG,CAACX,IAAJ,EADb,EAECF,IAFD,CAEM3B,IAAI,IAAI;AACb,YAAIyC,aAAa,GAAG,EAApB;;AACA,YAAGzC,IAAI,CAAC0C,MAAM,CAACC,IAAP,CAAY3C,IAAZ,EAAkB,CAAlB,CAAD,CAAJ,CAA2BE,MAA9B,EAAqC;AACpC,gBAAM0C,SAAS,GAAG5C,IAAI,CAAC0C,MAAM,CAACC,IAAP,CAAY3C,IAAZ,EAAkB,CAAlB,CAAD,CAAJ,CAA2BE,MAA7C;AACAuC,UAAAA,aAAa,GAAGG,SAAS,CAACC,GAAV,CAAczC,KAAK,IAAI;AACtC,kBAAM0C,SAAS,GAAG,IAAItB,IAAJ,CAASpB,KAAK,CAAC2C,KAAN,CAAYxB,KAAZ,CAAkByB,QAA3B,CAAlB;AACA,kBAAMC,OAAO,GAAG,IAAIzB,IAAJ,CAASsB,SAAS,GAAG,CAArB,CAAhB;AACA,kBAAMI,GAAG,GAAG;AACX7C,cAAAA,EAAE,EAAGD,KAAK,CAACC,EADA;AAEX8C,cAAAA,KAAK,EAAG/C,KAAK,CAACgD,IAFH;AAGX7B,cAAAA,KAAK,EAAGuB,SAHG;AAIXpB,cAAAA,GAAG,EAAGuB,OAJK;AAKXI,cAAAA,GAAG,EAAGjD,KAAK,CAACkD,MAAN,CAAa,CAAb,EAAgBC,GALX;AAMXC,cAAAA,UAAU,EAAGpD,KAAK,CAACmD;AANR,aAAZ;AAQA,mBAAOL,GAAP;AACA,WAZe,CAAhB;AAaA;;AAED,aAAKO,QAAL,CAAc;AAACvD,UAAAA,MAAM,EAAGuC;AAAV,SAAd,EAAwC,KAAKiB,iBAA7C;AACA,OAtBD;AAuBA,KAjEiB;;AAAA,SAmElBA,iBAnEkB,GAmEE,MAAM;AACzBnD,MAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ;AACA,YAAMmD,aAAa,GAAG3B,QAAQ,CAAC4B,gBAAT,CAA0B,YAA1B,CAAtB;;AACA,UAAGD,aAAH,EAAiB;AAChBA,QAAAA,aAAa,CAACE,OAAd,CAAsBC,GAAG,IAAI;AAC5B,gBAAMC,aAAa,GAAG,KAAKC,WAAL,CAAiBF,GAAjB,CAAtB;AACAA,UAAAA,GAAG,CAACG,gBAAJ,CAAqB,OAArB,EAA8B,MAAM;AACnC1D,YAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ,EAAsCsD,GAAtC;AACA,iBAAKL,QAAL,CAAc;AAACS,cAAAA,QAAQ,EAAGH,aAAa,CAAC,CAAD,CAAb,CAAiBV,GAA7B;AACX/B,cAAAA,SAAS,EAACyC,aAAa,CAAC,CAAD,CAAb,CAAiBP,UADhB;AAEXvC,cAAAA,UAAU,EAAC8C,aAAa,CAAC,CAAD,CAAb,CAAiBZ,KAFjB;AAGX7C,cAAAA,OAAO,EAAGyD,aAAa,CAAC,CAAD,CAAb,CAAiB1D,EAHhB;AAIX8D,cAAAA,YAAY,EAAG;AAJJ,aAAd;AAMA,WARD;AASD,SAXA;AAYA;AACD,KApFiB;;AAAA,SAsFlBH,WAtFkB,GAsFHF,GAAD,IAAS;AACtB,UAAIX,KAAJ;;AACA,UAAGW,GAAG,CAACX,KAAP,EAAa;AACZA,QAAAA,KAAK,GAAGW,GAAG,CAACM,QAAJ,CAAa,CAAb,EAAgBC,SAAxB;AACA,OAFD,MAEM;AACLlB,QAAAA,KAAK,GAACW,GAAG,CAACQ,iBAAJ,CAAsBnB,KAA5B;AACA;;AACD,YAAMY,aAAa,GAAI,KAAK9D,KAAL,CAAWC,MAAZ,CAAoBC,MAApB,CAA2B+C,GAAG,IAAIA,GAAG,CAACC,KAAJ,KAAcA,KAAhD,CAAtB;AACA,aAAOY,aAAP;AAEA,KAhGiB;;AAEjB,SAAK9D,KAAL,GAAa;AACZC,MAAAA,MAAM,EAAG,EADG;AAEZe,MAAAA,UAAU,EAAG,YAFD;AAGZiD,MAAAA,QAAQ,EAAG,iFAHC;AAIZ5C,MAAAA,SAAS,EAAG,+BAJA;AAKZhB,MAAAA,OAAO,EAAG,EALE;AAMZ6D,MAAAA,YAAY,EAAG;AANH,KAAb;AAOE;;AAyFHI,EAAAA,iBAAiB,GAAG;AACnB,QAAG,KAAKzE,KAAL,CAAWqB,IAAd,EAAmB;AAClBZ,MAAAA,OAAO,CAACC,GAAR,CAAY,oCAAZ;AACA,WAAK8B,SAAL;AACA;;AACD,UAAMkC,OAAO,GAAGxC,QAAQ,CAACyC,sBAAT,CAAgC,aAAhC,EAA+C,CAA/C,CAAhB;AACAD,IAAAA,OAAO,CAACP,gBAAR,CAAyB,OAAzB,EAAkC,MAAM;AAAE1D,MAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AAAiC,WAAK8B,SAAL;AAAkB,KAA7F;AACA,UAAMoC,QAAQ,GAAG1C,QAAQ,CAACyC,sBAAT,CAAgC,eAAhC,CAAjB;;AACA,QAAGC,QAAH,EAAY;AACX,WAAI,IAAIC,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACD,QAAQ,CAACE,MAAvB,EAA8BD,CAAC,EAA/B,EAAkC;AACjCD,QAAAA,QAAQ,CAACC,CAAD,CAAR,CAAYV,gBAAZ,CAA6B,OAA7B,EAAsC,MAAM;AAAE1D,UAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AAAkC,eAAK8B,SAAL;AAAkB,SAAlG;AACA;AACD;;AACDuC,IAAAA,MAAM,CAACC,UAAP,GAAoB,KAAKhF,KAAL,CAAWiF,iBAA/B;AACE;;AAEHC,EAAAA,MAAM,GAAE;AAAA,wBACyD,KAAK/E,KAD9D;AAAA,UACAC,MADA,eACAA,MADA;AAAA,UACQgE,QADR,eACQA,QADR;AAAA,UACkB5C,SADlB,eACkBA,SADlB;AAAA,UAC6BL,UAD7B,eAC6BA,UAD7B;AAAA,UACyCkD,YADzC,eACyCA,YADzC;AAAA,wBAEiC,KAAKrE,KAFtC;AAAA,UAEAsB,WAFA,eAEAA,WAFA;AAAA,UAEaD,IAFb,eAEaA,IAFb;AAAA,UAEmB8D,UAFnB,eAEmBA,UAFnB;AAGP1E,IAAAA,OAAO,CAACC,GAAR,CAAY,+BAAZ,EAA6CW,IAA7C;AACA,WACC;AAAK,MAAA,EAAE,EAAC,UAAR;AAAmB,MAAA,SAAS,EAAC,sBAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,uBAAsB,KAAKrB,KAAL,CAAWqB,IAAK,GADzC,CADD,EAII,oBAAC,QAAD;AACE,MAAA,SAAS,EAAEzB,SADb;AAEE,MAAA,MAAM,EAAEQ,MAFV;AAGE,MAAA,aAAa,EAAC,OAHhB;AAIE,MAAA,WAAW,EAAC,KAJd;AAKE,MAAA,KAAK,EAAE;AAACgF,QAAAA,MAAM,EAAE;AAAT,OALT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ,EAWI;AAAK,MAAA,KAAK,EAAE;AAACC,QAAAA,OAAO,EAAC,MAAT;AAAiBC,QAAAA,cAAc,EAAC;AAAhC,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACD,oBAAC,YAAD;AAAc,MAAA,QAAQ,EAAElB,QAAxB;AAAkC,MAAA,SAAS,EAAE5C,SAA7C;AAAwD,MAAA,UAAU,EAAEL,UAApE;AAAgF,MAAA,UAAU,EAAEgE,UAA5F;AAAwG,MAAA,UAAU,EAAE,KAAKlF,UAAzH;AAAqI,MAAA,YAAY,EAAEoE,YAAnJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADC,CAXJ,CADD;AAiBA;;AAxIwC;;AA4I1C,eAAexE,YAAf","sourcesContent":["import React from 'react';\r\nimport { Calendar, momentLocalizer } from 'react-big-calendar';\r\nimport moment from 'moment';\r\nimport 'react-big-calendar/lib/sass/styles.scss';\r\nimport './Calendar.css';\r\nimport EventDetails from './EventDetails';\r\n \r\nconst localizer = momentLocalizer(moment)\r\n \r\nclass CalendarTest extends React.Component{\r\n\tconstructor(props){\r\n\t\tsuper(props)\r\n\t\tthis.state = {\r\n\t\t\tevents : [],\r\n\t\t\teventTitle : 'Powered By',\r\n\t\t\teventImg : 'https://uk.tmconst.com/ccp-salesforce-images/DK/ticketmaster_guider_720x405.jpg',\r\n\t\t\teventLink : 'https://www.ticketmaster.com/',\r\n\t\t\teventId : '',\r\n\t\t\teventClicked : false\r\n\t\t}}\r\n\r\n\tSaveSearch = () => {\r\n\t\tconst data = (this.state.events).filter(event => event.id === this.state.eventId);\r\n\t\tconsole.log('data of event:', data);\r\n\r\n\t\tfetch('http://localhost:5000/saveSearch', {\r\n\t      method: 'post',\r\n\t      headers: {'Content-Type': 'application/json'},\r\n\t      body: JSON.stringify({\r\n\t        user : this.props.userId,\r\n\t        eventId : this.state.eventId,\r\n\t        eventTitle : this.state.eventTitle,\r\n\t        location : `${this.props.city} , ${this.props.countryCode}`,\r\n\t        description : `Details: ${this.state.eventLink}`,\r\n\t        start : Date.parse(data.start),\r\n\t        end : Date.parse(data.end)\r\n\t      })\r\n\t    })\r\n\t      .then(response => response.json())\r\n\t      .then(user => {\r\n\t        if (user[0] === parseInt(this.props.userId)) {\r\n\t        \tconst btnDiv = document.getElementById('buttonDiv');\r\n\t        \tconst msg = document.createElement(\"p\");\r\n\t        \tmsg.textContent = \"Event saved to your calendar!\";\r\n\t        \tbtnDiv.appendChild(msg);\r\n\t        }\r\n\t      })\r\n\t}\r\n\r\n\tgetEvents= () => {\r\n\t\tconsole.log('got to getEvents');\r\n\t\tconst fetchUrl = 'http://localhost:5000/calendar/' + this.props.countryCode + '/' + this.props.city;\r\n\t\tfetch(fetchUrl)\r\n\t\t.then(res => res.json())\r\n\t\t.then(data => {\r\n\t\t\tlet tempEventsArr = [];\r\n\t\t\tif(data[Object.keys(data)[0]].events){\r\n\t\t\t\tconst eventsArr = data[Object.keys(data)[0]].events;\r\n\t\t\t\ttempEventsArr = eventsArr.map(event => {\r\n\t\t\t\t\tconst startDate = new Date(event.dates.start.dateTime);\r\n\t\t\t\t\tconst endDate = new Date(startDate + 1);\r\n\t\t\t\t\tconst obj = {\r\n\t\t\t\t\t\tid : event.id,\r\n\t\t\t\t\t\ttitle : event.name,\r\n\t\t\t\t\t\tstart : startDate,\r\n\t\t\t\t\t\tend : endDate,\r\n\t\t\t\t\t\timg : event.images[5].url,\r\n\t\t\t\t\t\tticketsUrl : event.url\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn obj;\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tthis.setState({events : tempEventsArr}, this.addClickFunctions);\r\n\t\t});\r\n\t}\r\n\r\n\taddClickFunctions = () => {\r\n\t\tconsole.log('got to add click functions');\r\n\t\tconst eventsClasses = document.querySelectorAll(\".rbc-event\");\r\n\t\tif(eventsClasses){\r\n\t\t\teventsClasses.forEach(div => {\r\n\t\t\t\tconst selectedEvent = this.getEventObj(div);\r\n\t\t\t\tdiv.addEventListener(\"click\", () => {\r\n\t\t\t\t\tconsole.log('recognized click, div:', div);\r\n\t\t\t\t\tthis.setState({eventImg : selectedEvent[0].img, \r\n\t\t\t\t\t\t\t\teventLink:selectedEvent[0].ticketsUrl, \r\n\t\t\t\t\t\t\t\teventTitle:selectedEvent[0].title,\r\n\t\t\t\t\t\t\t\teventId : selectedEvent[0].id,\r\n\t\t\t\t\t\t\t\teventClicked : true\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t});\r\n\t\t})\r\n\t\t}\r\n\t}\r\n\r\n\tgetEventObj = (div) => {\r\n\t\tlet title;\r\n\t\tif(div.title){\r\n\t\t\ttitle = div.children[1].innerText;\r\n\t\t}else {\r\n\t\t\ttitle=div.firstElementChild.title;\r\n\t\t}\r\n\t\tconst selectedEvent = (this.state.events).filter(obj => obj.title === title);\r\n\t\treturn selectedEvent;\r\n\t\t\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tif(this.props.city){\r\n\t\t\tconsole.log('cal did mount, going to get events');\r\n\t\t\tthis.getEvents();\r\n\t\t}\r\n\t\tconst toolBar = document.getElementsByClassName('rbc-toolbar')[0];\r\n\t\ttoolBar.addEventListener(\"click\", () => { console.log('click on toolbar'); this.getEvents();});\r\n\t\tconst showMore = document.getElementsByClassName('rbc-show-more');\r\n\t\tif(showMore){\r\n\t\t\tfor(let i=0;i<showMore.length;i++){\r\n\t\t\t\tshowMore[i].addEventListener(\"click\", () => { console.log('click on showMore'); this.getEvents();})\r\n\t\t\t}\r\n\t\t}\r\n\t\twindow.onpopstate = this.props.onBackButtonEvent;\r\n  \t}\r\n\r\n\trender(){\r\n\t\tconst {events, eventImg, eventLink, eventTitle, eventClicked} = this.state;\r\n\t\tconst {countryCode, city, isSignedIn} = this.props;\r\n\t\tconsole.log('rendering calendar for city: ', city);\r\n\t\treturn(\r\n\t\t\t<div id='calendar' className='pa2 pb5 ma2 shadow-5'>\r\n\t\t\t\t<h1>\r\n\t\t\t\t\t{`Upcoming Events for ${this.props.city}:`}\r\n\t\t\t\t</h1>\r\n\t\t\t    <Calendar\r\n\t\t\t      localizer={localizer}\r\n\t\t\t      events={events}\r\n\t\t\t      startAccessor=\"start\"\r\n\t\t\t      endAccessor=\"end\"\r\n\t\t\t      style={{height: 500}}\r\n\t\t\t    />\r\n\t\t\t    <div style={{display:'flex', justifyContent:'center'}}>\r\n\t\t  \t\t<EventDetails eventImg={eventImg} eventLink={eventLink} eventTitle={eventTitle} isSignedIn={isSignedIn} SaveSearch={this.SaveSearch} eventClicked={eventClicked}/>\r\n\t\t  \t\t</div>\r\n\t\t\t</div> \r\n\t\t);\r\n\t}\r\n\t\t\r\n}\r\n\r\nexport default CalendarTest;"]},"metadata":{},"sourceType":"module"}