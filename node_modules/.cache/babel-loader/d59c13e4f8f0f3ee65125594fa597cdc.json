{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Gal\\\\Desktop\\\\Udemy\\\\event_finder_app\\\\src\\\\components\\\\SearchBar.js\";\nimport React from 'react';\nimport { CountryDropdown } from 'react-country-region-selector';\nimport { getCode } from 'country-list';\nconst initialState = {\n  country: '',\n  countryCode: '',\n  city: '',\n  cityList: [],\n  period: '',\n  calChanged: false,\n  supportedCountryCode: [\"US\", \"AU\", \"AT\", \"BE\", \"CA\", \"DK\", \"FI\", \"FR\", \"DE\", \"GB\", \"IE\", \"LU\", \"MX\", \"NL\", \"NZ\", \"NO\", \"PL\", \"PT\", \"ES\", \"SE\", \"CH\", \"AE\"]\n};\n\nclass SearchBar extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.getCountryCode = () => {\n      console.log('getCountryCode ', this.state.country);\n      const countryName = this.state.country;\n\n      if (countryName === 'United States') {\n        this.setState({\n          countryCode: 'US'\n        }, this.getCitiesOfCountry);\n      } else if (countryName === 'United Kingdom') {\n        this.setState({\n          countryCode: 'GB'\n        }, this.getCitiesOfCountry);\n      } else {\n        this.setState({\n          countryCode: getCode(countryName)\n        }, this.getCitiesOfCountry);\n      }\n    };\n\n    this.getCitiesOfCountry = () => {\n      console.log('getCitiesOfCountry ', this.state.countryCode);\n      fetch('http://localhost:5000/cities', {\n        method: 'post',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          code: this.state.countryCode\n        })\n      }).then(res => res.json()).then(data => {\n        this.setState({\n          cityList: data\n        }, this.updateCityOptions);\n      });\n    };\n\n    this.updateCityOptions = () => {\n      console.log('updateCityOptions ', this.state.cityList);\n      const cities = this.state.cityList;\n      let select = document.getElementById('citySelector');\n\n      if (select.childElementCount) {\n        this.removeCities(select);\n      }\n\n      cities.forEach(city => {\n        let op = document.createElement('option');\n        op.textContent = city;\n        op.value = city;\n        select.appendChild(op);\n      }, this.setState({\n        city: cities[0]\n      }));\n    };\n\n    this.onCityChange = () => {\n      console.log('onCityChange');\n      const select = document.getElementById('citySelector');\n      const val = select.value;\n      this.props.onSearchChange(true, val, this.state.countryCode);\n      this.setState(initialState);\n      this.removeCities(select);\n    };\n\n    this.removeCities = select => {\n      console.log('remove existing cities ', select.childElementCount);\n\n      for (let i = 1; i < select.childElementCount; i++) {\n        select.children[i].remove();\n      }\n    };\n\n    this.state = initialState;\n  }\n\n  onCountryChange(val) {\n    console.log('onCountryChange ', val);\n    this.props.onSearchChange(false, '', '');\n    this.setState({\n      country: val\n    }, this.getCountryCode);\n  }\n\n  componentDidMount() {\n    console.log('componentDidMount');\n    this.forceUpdate();\n  }\n\n  render() {\n    console.log('render');\n    const _this$state = this.state,\n          country = _this$state.country,\n          city = _this$state.city,\n          supportedCountryCode = _this$state.supportedCountryCode;\n    return React.createElement(\"div\", {\n      className: \"pa5\",\n      style: {\n        paddingRight: '6rem',\n        paddingLeft: '5rem'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, \" Where are you traveling to?\"), React.createElement(\"div\", {\n      className: \"br3 pa5 ma3 ml5 mr5 shadow-5\",\n      style: {\n        display: 'flex',\n        justifyContent: 'center',\n        flexWrap: 'wrap',\n        backgroundColor: '#24478f'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(CountryDropdown, {\n      className: \"pa3 ba br3 b--blue bg-lightest-blue ma2 mw5\",\n      value: country,\n      onChange: val => this.onCountryChange(val),\n      whitelist: supportedCountryCode,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      id: \"cities\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(\"select\", {\n      id: \"citySelector\",\n      className: \"pa3 ba br3 b--blue bg-lightest-blue ma2 mw5\",\n      onChange: this.onCityChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, \"Select City\")))));\n  }\n\n}\n\nexport default SearchBar;","map":{"version":3,"sources":["C:/Users/Gal/Desktop/Udemy/event_finder_app/src/components/SearchBar.js"],"names":["React","CountryDropdown","getCode","initialState","country","countryCode","city","cityList","period","calChanged","supportedCountryCode","SearchBar","Component","constructor","props","getCountryCode","console","log","state","countryName","setState","getCitiesOfCountry","fetch","method","headers","body","JSON","stringify","code","then","res","json","data","updateCityOptions","cities","select","document","getElementById","childElementCount","removeCities","forEach","op","createElement","textContent","value","appendChild","onCityChange","val","onSearchChange","i","children","remove","onCountryChange","componentDidMount","forceUpdate","render","paddingRight","paddingLeft","display","justifyContent","flexWrap","backgroundColor"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { CountryDropdown } from 'react-country-region-selector';\r\nimport { getCode } from 'country-list';\r\n\r\n\r\nconst initialState = {\r\n\tcountry : '',\r\n\tcountryCode : '',\r\n\tcity : '',\r\n\tcityList : [],\r\n\tperiod : '',\r\n\tcalChanged : false,\r\n\tsupportedCountryCode : [\"US\", \"AU\", \"AT\", \"BE\", \"CA\", \"DK\", \"FI\", \"FR\", \"DE\", \"GB\", \"IE\", \"LU\", \"MX\", \"NL\", \"NZ\", \"NO\", \"PL\", \"PT\", \"ES\", \"SE\", \"CH\", \"AE\"]\r\n}\r\n\r\nclass SearchBar extends React.Component {\r\n\tconstructor(props){\r\n\t\tsuper(props)\r\n\t\tthis.state = initialState;\r\n\t}\r\n\r\n\tonCountryChange (val) {\r\n\t\tconsole.log('onCountryChange ', val);\r\n\t    this.props.onSearchChange(false, '', '');\r\n\t    this.setState({ country: val },this.getCountryCode);\r\n\t}\r\n\r\n\r\n\tgetCountryCode = () => {\r\n\t\tconsole.log('getCountryCode ', this.state.country);\r\n\t\tconst countryName = this.state.country;\r\n\t\tif(countryName === 'United States'){\r\n\t\t\tthis.setState({countryCode : 'US'}, this.getCitiesOfCountry);\r\n\t\t}else if(countryName === 'United Kingdom'){\r\n\t\t\tthis.setState({countryCode : 'GB'}, this.getCitiesOfCountry);\r\n\t\t}else{\r\n\t\t\tthis.setState({countryCode : getCode(countryName)}, this.getCitiesOfCountry);\r\n\t\t}\r\n\t}\r\n\r\n\tgetCitiesOfCountry = () => {\r\n\t\tconsole.log('getCitiesOfCountry ', this.state.countryCode);\r\n\t\tfetch('http://localhost:5000/cities', {\r\n\t      method: 'post',\r\n\t      headers: {'Content-Type': 'application/json'},\r\n\t      body: JSON.stringify({\r\n\t        code: this.state.countryCode\r\n\t      })\r\n\t    })\r\n\t    .then(res => res.json())\r\n\t    .then(data => {\r\n\t    \tthis.setState({cityList : data}, this.updateCityOptions);\r\n\t    })\r\n\t}\r\n\r\n\tupdateCityOptions = () => {\r\n\t\tconsole.log('updateCityOptions ', this.state.cityList);\r\n\t\tconst cities = this.state.cityList;\r\n\t\tlet select = document.getElementById('citySelector');\r\n\t\tif(select.childElementCount){\r\n\t\t\tthis.removeCities(select);\r\n\t\t}\r\n\t    cities.forEach(city => {\r\n\t    \tlet op = document.createElement('option');\r\n\t    \top.textContent = city;\r\n\t    \top.value = city;\r\n\t    \tselect.appendChild(op);\r\n\t    \t}, this.setState({city : cities[0]}))  \r\n\t}\r\n\r\n\tonCityChange = () => {\r\n\t\tconsole.log('onCityChange');\r\n\t\tconst select = document.getElementById('citySelector');\r\n\t\tconst val = select.value;\r\n\t    this.props.onSearchChange(true, val, this.state.countryCode);\r\n\t\tthis.setState(initialState);\r\n\t\tthis.removeCities(select);\r\n  \t}\r\n\r\n\tremoveCities = (select) => {\r\n\t\tconsole.log('remove existing cities ', select.childElementCount);\r\n\t\tfor(let i=1;i<select.childElementCount;i++){\r\n\t\t\tselect.children[i].remove();\r\n\t\t}\r\n\t}\r\n\t\r\n\tcomponentDidMount() {\r\n\t\tconsole.log('componentDidMount');\r\n\t\tthis.forceUpdate();\r\n  \t}\r\n\r\n\r\n  \trender(){\r\n  \t\tconsole.log('render');\r\n  \t\tconst {country, city, supportedCountryCode} = this.state;\r\n\t\treturn (\r\n\t\t\t<div className='pa5' style={{paddingRight:'6rem', paddingLeft:'5rem'}}>\r\n\t\t\t\t<h1> Where are you traveling to?</h1>\r\n\t\t\t\t<div className='br3 pa5 ma3 ml5 mr5 shadow-5' style={{display:'flex', justifyContent:'center', flexWrap: 'wrap', backgroundColor:'#24478f'}}>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t<CountryDropdown\r\n\t\t\t\t\tclassName='pa3 ba br3 b--blue bg-lightest-blue ma2 mw5'\r\n\t\t\t          value={country}\r\n\t\t\t          onChange={(val) => this.onCountryChange(val)}\r\n\t\t\t          whitelist={supportedCountryCode}/>\r\n\t\t\t         </div>\r\n\t\t\t\t\t<div id='cities'>\r\n\t\t\t\t\t\t<select id='citySelector' className='pa3 ba br3 b--blue bg-lightest-blue ma2 mw5' onChange={this.onCityChange}>\r\n\t\t\t\t\t\t\t<option value>Select City</option>\r\n\t\t\t\t\t\t</select>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default SearchBar;"]},"metadata":{},"sourceType":"module"}