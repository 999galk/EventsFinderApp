{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Gal\\\\Desktop\\\\Udemy\\\\event_finder_app\\\\src\\\\components\\\\SearchBar.js\";\nimport React from 'react';\nimport { CountryDropdown } from 'react-country-region-selector';\nimport { getCode } from 'country-list';\nimport CityDropdown from './CityDropdown';\n\nclass SearchBar extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.getCountryCode = () => {\n      console.log('getCountryCode');\n      const countryName = this.state.country;\n      console.log('name:', countryName);\n      console.log('code:', getCode(countryName));\n      this.setState({\n        countryCode: getCode(countryName)\n      }, this.getCitiesOfCountry);\n    };\n\n    this.getCitiesOfCountry = () => {\n      console.log('code in get:', this.state.countryCode);\n      fetch('http://localhost:5000/cities', {\n        method: 'post',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          code: this.state.countryCode\n        })\n      }).then(res => res.json()).then(data => {\n        this.setState({\n          cityList: data\n        }, this.updateOptions);\n      });\n    };\n\n    this.updateOptions = () => {\n      const cities = this.state.cityList;\n      console.log('cities in dropdown:', cities);\n      const div = document.getElementById('cities');\n\n      if (div.childElementCount) {\n        let select = document.getElementById('citySelector');\n        select.remove();\n      } else {\n        const select = document.createElement('select');\n        select.id = 'citySelector';\n        div.appendChild(select);\n        cities.forEach(city => {\n          let op = document.createElement('option');\n          op.textContent = city;\n          op.value = city;\n          select.appendChild(op);\n        }, this.setState({\n          city: cities[0]\n        }));\n      }\n    };\n\n    this.state = {\n      country: '',\n      countryCode: '',\n      city: '',\n      cityList: [],\n      period: ''\n    };\n  }\n\n  selectCountry(val) {\n    console.log('selectCountry');\n    this.setState({\n      country: val\n    }, this.getCountryCode);\n  }\n\n  selectCity(val) {\n    this.setState({\n      country: val\n    });\n  }\n\n  componentDidMount() {\n    console.log('componentDidMount');\n    const script = document.createElement(\"script\");\n    script.async = true;\n    script.src = \"https://ticketmaster-api-staging.github.io/products-and-docs/widgets/calendar/1.0.0/lib/main-widget.js\";\n    this.div.appendChild(script);\n  }\n\n  render() {\n    const _this$state = this.state,\n          country = _this$state.country,\n          city = _this$state.city,\n          countryCode = _this$state.countryCode;\n    console.log('render', countryCode);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        display: 'flex'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(CountryDropdown, {\n      value: country,\n      onChange: val => this.selectCountry(val),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      id: \"cities\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      ref: el => this.div = el,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      \"w-type\": \"calendar\",\n      \"w-tmapikey\": \"BTAzLLcXX3xXtooi8WdIktbOn1C3irib\",\n      \"w-googleapikey\": \"YOUR_GOOGLE_API_KEY\",\n      \"w-keyword\": \"\",\n      \"w-theme\": \"calendar\",\n      \"w-colorscheme\": \"light\",\n      \"w-width\": \"298\",\n      \"w-height\": \"400\",\n      \"w-size\": \"25\",\n      \"w-border\": \"1\",\n      \"w-borderradius\": \"4\",\n      \"w-postalcode\": \"\",\n      \"w-radius\": \"25\",\n      \"w-countrycode\": \"US\",\n      \"w-city\": \"Los Angeles\",\n      \"w-period\": \"Thu Jan 09 2020 13:04:11 GMT+0200 (Israel Standard Time)\",\n      \"w-periodweek\": \"week\",\n      \"w-layout\": \"vertical\",\n      \"w-classificationid\": \"\",\n      \"w-attractionid\": \"\",\n      \"w-promoterid\": \"\",\n      \"w-venueid\": \"\",\n      \"w-affiliateid\": \"\",\n      \"w-segmentid\": \"\",\n      \"w-proportion\": \"standart\",\n      \"w-latlong\": \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default SearchBar;","map":{"version":3,"sources":["C:/Users/Gal/Desktop/Udemy/event_finder_app/src/components/SearchBar.js"],"names":["React","CountryDropdown","getCode","CityDropdown","SearchBar","Component","constructor","props","getCountryCode","console","log","countryName","state","country","setState","countryCode","getCitiesOfCountry","fetch","method","headers","body","JSON","stringify","code","then","res","json","data","cityList","updateOptions","cities","div","document","getElementById","childElementCount","select","remove","createElement","id","appendChild","forEach","city","op","textContent","value","period","selectCountry","val","selectCity","componentDidMount","script","async","src","render","display","el"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { CountryDropdown } from 'react-country-region-selector';\r\nimport { getCode } from 'country-list';\r\nimport CityDropdown from './CityDropdown';\r\n\r\nclass SearchBar extends React.Component {\r\n\tconstructor(props){\r\n\t\tsuper(props)\r\n\t\tthis.state = {\r\n\t\t\tcountry : '',\r\n\t\t\tcountryCode : '',\r\n\t\t\tcity : '',\r\n\t\t\tcityList : [],\r\n\t\t\tperiod : ''\r\n\t\t}\r\n\t}\r\n\r\n\tselectCountry (val) {\r\n\t\tconsole.log('selectCountry');\r\n\t    this.setState({ country: val },this.getCountryCode);\r\n\t}\r\n\r\n\tgetCountryCode = () => {\r\n\t\tconsole.log('getCountryCode');\r\n\t\tconst countryName = this.state.country;\r\n\t\tconsole.log('name:',countryName);\r\n\t\tconsole.log('code:', getCode(countryName));\r\n\t\tthis.setState({countryCode : getCode(countryName)}, this.getCitiesOfCountry);\r\n\t}\r\n\r\n\tselectCity (val) {\r\n\t    this.setState({ country: val });\r\n\t}\r\n\r\n\tgetCitiesOfCountry = () => {\r\n\t\tconsole.log('code in get:', this.state.countryCode);\r\n\t\tfetch('http://localhost:5000/cities', {\r\n\t      method: 'post',\r\n\t      headers: {'Content-Type': 'application/json'},\r\n\t      body: JSON.stringify({\r\n\t        code: this.state.countryCode\r\n\t      })\r\n\t    })\r\n\t    .then(res => res.json())\r\n\t    .then(data => {\r\n\t    \tthis.setState({cityList : data}, this.updateOptions);\r\n\t    })\r\n\t}\r\n\r\n\tupdateOptions = () => {\r\n\t\tconst cities = this.state.cityList;\r\n\t    console.log('cities in dropdown:', cities);\r\n\t    const div = document.getElementById('cities');\r\n\t    if (div.childElementCount){\r\n\t    \tlet select = document.getElementById('citySelector');\r\n\t    \tselect.remove();\r\n\t    } else {\r\n\t    \tconst select = document.createElement('select');\r\n\t    \tselect.id = 'citySelector';\r\n\t\t    div.appendChild(select);\r\n\t\t    cities.forEach(city => {\r\n\t\t    \tlet op = document.createElement('option');\r\n\t\t    \top.textContent = city;\r\n\t\t    \top.value = city;\r\n\t\t    \tselect.appendChild(op);\r\n\t\t    \t}, this.setState({city : cities[0]}))\r\n\t    \t}   \r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tconsole.log('componentDidMount');\r\n\t    const script = document.createElement(\"script\");\r\n\t    script.async = true;\r\n\t    script.src = \"https://ticketmaster-api-staging.github.io/products-and-docs/widgets/calendar/1.0.0/lib/main-widget.js\";\r\n\t    this.div.appendChild(script);\r\n  \t}\r\n\r\n  \trender(){\r\n  \t\tconst {country, city, countryCode} = this.state;\r\n  \t\tconsole.log('render', countryCode);\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<div style={{display:'flex'}}>\r\n\t\t\t\t\t<CountryDropdown\r\n\t\t\t          value={country}\r\n\t\t\t          onChange={(val) => this.selectCountry(val)}/>\r\n\t\t\t\t\t<div id='cities'>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div ref={el => (this.div = el)}>\r\n\t\t\t\t\t<div w-type=\"calendar\" w-tmapikey=\"BTAzLLcXX3xXtooi8WdIktbOn1C3irib\" w-googleapikey=\"YOUR_GOOGLE_API_KEY\" w-keyword=\"\" w-theme=\"calendar\" w-colorscheme=\"light\" w-width=\"298\" w-height=\"400\" w-size=\"25\" w-border=\"1\" w-borderradius=\"4\" w-postalcode=\"\" w-radius=\"25\" w-countrycode=\"US\" w-city=\"Los Angeles\" w-period=\"Thu Jan 09 2020 13:04:11 GMT+0200 (Israel Standard Time)\" w-periodweek=\"week\" w-layout=\"vertical\" w-classificationid=\"\" w-attractionid=\"\" w-promoterid=\"\" w-venueid=\"\" w-affiliateid=\"\" w-segmentid=\"\" w-proportion=\"standart\" w-latlong=\"\"></div>\r\n\t\t\t    </div>\r\n\t\t    </div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default SearchBar;"]},"metadata":{},"sourceType":"module"}