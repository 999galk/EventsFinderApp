{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Gal\\\\Desktop\\\\Udemy\\\\event_finder_app\\\\src\\\\components\\\\SearchBar.js\";\nimport React from 'react';\nimport { CountryDropdown } from 'react-country-region-selector';\nimport { getCode } from 'country-list';\n\nclass SearchBar extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.getCountryCode = () => {\n      console.log('getCountryCode');\n      const countryName = this.state.country;\n\n      if (countryName === 'United States') {\n        this.setState({\n          countryCode: 'US'\n        }, this.getCitiesOfCountry);\n      } else {\n        this.setState({\n          countryCode: getCode(countryName)\n        }, this.getCitiesOfCountry);\n      }\n    };\n\n    this.onCityChange = val => {\n      console.log('city on change:', val);\n\n      if (this.props.calChanged === true) {\n        this.props.onSearchChange(false, val, this.state.countryCode);\n      }\n\n      this.props.onSearchChange(true, val, this.state.countryCode);\n      this.setState({\n        city: val\n      });\n    };\n\n    this.getCitiesOfCountry = () => {\n      console.log('code in get:', this.state.countryCode);\n      fetch('http://localhost:5000/cities', {\n        method: 'post',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          code: this.state.countryCode\n        })\n      }).then(res => res.json()).then(data => {\n        this.setState({\n          cityList: data\n        }, this.updateCityOptions);\n      });\n    };\n\n    this.updateCityOptions = () => {\n      const cities = this.state.cityList;\n      console.log('cities in dropdown:', cities);\n      let select = document.getElementById('citySelector');\n\n      if (select.childElementCount) {\n        for (let i = 0; i < select.childElementCount; i++) {\n          select.children[i].remove();\n        }\n      }\n\n      cities.forEach(city => {\n        let op = document.createElement('option');\n        op.textContent = city;\n        op.value = city;\n        select.appendChild(op);\n      }, this.setState({\n        city: cities[0]\n      }));\n    };\n\n    this.state = {\n      country: '',\n      countryCode: '',\n      city: '',\n      cityList: [],\n      period: '',\n      calChanged: false,\n      supportedCountryCode: [\"US\", \"AD\", \"AI\", \"AR\", \"AU\", \"AT\", \"AZ\", \"BS\", \"BH\", \"BB\", \"BE\", \"BM\", \"BR\", \"BG\", \"CA\", \"CL\", \"CN\", \"CO\", \"CR\", \"HR\", \"CY\", \"CZ\", \"DK\", \"DO\", \"EC\", \"EE\", \"FO\", \"FI\", \"FR\", \"GE\", \"DE\", \"GH\", \"GI\", \"GB\", \"GR\", \"HK\", \"HU\", \"IS\", \"IN\", \"IE\", \"IL\", \"IT\", \"JM\", \"JP\", \"KR\", \"LV\", \"LB\", \"LT\", \"LU\", \"MY\", \"MT\", \"MX\", \"MC\", \"ME\", \"MA\", \"NL\", \"AN\", \"NZ\", \"ND\", \"NO\", \"PE\", \"PL\", \"PT\", \"RO\", \"RU\", \"LC\", \"SA\", \"RS\", \"SG\", \"SK\", \"SI\", \"ZA\", \"ES\", \"SE\", \"CH\", \"TW\", \"TH\", \"TT\", \"TR\", \"UA\", \"AE\", \"UY\", \"VE\"]\n    };\n  }\n\n  onCountryChange(val) {\n    this.setState({\n      country: val\n    }, this.getCountryCode);\n  }\n\n  componentDidMount() {\n    console.log('componentDidMount');\n    this.forceUpdate();\n  }\n\n  render() {\n    const _this$state = this.state,\n          country = _this$state.country,\n          city = _this$state.city,\n          supportedCountryCode = _this$state.supportedCountryCode;\n    console.log('got to render, city is:', city);\n    return React.createElement(\"div\", {\n      className: \"pa5\",\n      style: {\n        paddingRight: '6rem',\n        paddingLeft: '5rem'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, \" Where are you traveling to?\"), React.createElement(\"div\", {\n      className: \"br3 pa5 ma3 ml5 mr5 shadow-5\",\n      style: {\n        display: 'flex',\n        justifyContent: 'center',\n        flexWrap: 'wrap',\n        backgroundColor: '#24478f'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(CountryDropdown, {\n      className: \"pa3 ba br3 b--blue bg-lightest-blue ma2 mw5\",\n      value: country,\n      onChange: val => this.onCountryChange(val),\n      whitelist: supportedCountryCode,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      id: \"cities\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(\"select\", {\n      id: \"citySelector\",\n      className: \"pa3 ba br3 b--blue bg-lightest-blue ma2 mw5\",\n      onChange: this.onCityChange(val),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, \"Select City\")))));\n  }\n\n}\n\nexport default SearchBar;","map":{"version":3,"sources":["C:/Users/Gal/Desktop/Udemy/event_finder_app/src/components/SearchBar.js"],"names":["React","CountryDropdown","getCode","SearchBar","Component","constructor","props","getCountryCode","console","log","countryName","state","country","setState","countryCode","getCitiesOfCountry","onCityChange","val","calChanged","onSearchChange","city","fetch","method","headers","body","JSON","stringify","code","then","res","json","data","cityList","updateCityOptions","cities","select","document","getElementById","childElementCount","i","children","remove","forEach","op","createElement","textContent","value","appendChild","period","supportedCountryCode","onCountryChange","componentDidMount","forceUpdate","render","paddingRight","paddingLeft","display","justifyContent","flexWrap","backgroundColor"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { CountryDropdown } from 'react-country-region-selector';\r\nimport { getCode } from 'country-list';\r\n\r\nclass SearchBar extends React.Component {\r\n\tconstructor(props){\r\n\t\tsuper(props)\r\n\t\tthis.state = {\r\n\t\t\tcountry : '',\r\n\t\t\tcountryCode : '',\r\n\t\t\tcity : '',\r\n\t\t\tcityList : [],\r\n\t\t\tperiod : '',\r\n\t\t\tcalChanged : false,\r\n\t\t\tsupportedCountryCode : [\"US\", \"AD\", \"AI\", \"AR\", \"AU\", \"AT\", \"AZ\", \"BS\", \"BH\", \"BB\", \"BE\", \"BM\", \"BR\", \"BG\", \"CA\", \"CL\", \"CN\", \"CO\", \"CR\", \"HR\", \"CY\", \"CZ\", \"DK\", \"DO\", \"EC\", \"EE\", \"FO\", \"FI\", \"FR\", \"GE\", \"DE\", \"GH\", \"GI\", \"GB\", \"GR\", \"HK\", \"HU\", \"IS\", \"IN\", \"IE\", \"IL\", \"IT\", \"JM\", \"JP\", \"KR\", \"LV\", \"LB\", \"LT\", \"LU\", \"MY\", \"MT\", \"MX\", \"MC\", \"ME\", \"MA\", \"NL\", \"AN\", \"NZ\", \"ND\", \"NO\", \"PE\", \"PL\", \"PT\", \"RO\", \"RU\", \"LC\", \"SA\", \"RS\", \"SG\", \"SK\", \"SI\", \"ZA\", \"ES\", \"SE\", \"CH\", \"TW\", \"TH\", \"TT\", \"TR\", \"UA\", \"AE\", \"UY\", \"VE\"]\r\n\t\t}\r\n\t}\r\n\r\n\tonCountryChange (val) {\r\n\t    this.setState({ country: val },this.getCountryCode);\r\n\t}\r\n\r\n\r\n\tgetCountryCode = () => {\r\n\t\tconsole.log('getCountryCode');\r\n\t\tconst countryName = this.state.country;\r\n\t\tif(countryName === 'United States'){\r\n\t\t\tthis.setState({countryCode : 'US'}, this.getCitiesOfCountry);\r\n\t\t}else{\r\n\t\t\tthis.setState({countryCode : getCode(countryName)}, this.getCitiesOfCountry);\r\n\t\t}\r\n\t}\r\n\r\n\tonCityChange = (val) => {\r\n\t\tconsole.log('city on change:', val);\r\n    if(this.props.calChanged === true){\r\n      this.props.onSearchChange(false, val, this.state.countryCode);\r\n    }\r\n    this.props.onSearchChange(true, val, this.state.countryCode);\r\n\tthis.setState({city : val});\r\n  \t}\r\n\r\n\tgetCitiesOfCountry = () => {\r\n\t\tconsole.log('code in get:', this.state.countryCode);\r\n\t\tfetch('http://localhost:5000/cities', {\r\n\t      method: 'post',\r\n\t      headers: {'Content-Type': 'application/json'},\r\n\t      body: JSON.stringify({\r\n\t        code: this.state.countryCode\r\n\t      })\r\n\t    })\r\n\t    .then(res => res.json())\r\n\t    .then(data => {\r\n\t    \tthis.setState({cityList : data}, this.updateCityOptions);\r\n\t    })\r\n\t}\r\n\r\n\tupdateCityOptions = () => {\r\n\t\tconst cities = this.state.cityList;\r\n\t    console.log('cities in dropdown:', cities);\r\n\t\tlet select = document.getElementById('citySelector');\r\n\t\tif(select.childElementCount){\r\n\t\t\tfor(let i=0;i<select.childElementCount;i++){\r\n\t\t\t\tselect.children[i].remove();\r\n\t\t\t}\r\n\t\t}\r\n\t    cities.forEach(city => {\r\n\t    \tlet op = document.createElement('option');\r\n\t    \top.textContent = city;\r\n\t    \top.value = city;\r\n\t    \tselect.appendChild(op);\r\n\t    \t}, this.setState({city : cities[0]}))  \r\n\t}\r\n\r\n\t\r\n\tcomponentDidMount() {\r\n\t\tconsole.log('componentDidMount');\r\n\t\tthis.forceUpdate();\r\n  \t}\r\n\r\n\r\n  \trender(){\r\n  \t\tconst {country, city, supportedCountryCode} = this.state;\r\n  \t\tconsole.log('got to render, city is:', city);\r\n\t\treturn (\r\n\t\t\t<div className='pa5' style={{paddingRight:'6rem', paddingLeft:'5rem'}}>\r\n\t\t\t\t<h1> Where are you traveling to?</h1>\r\n\t\t\t\t<div className='br3 pa5 ma3 ml5 mr5 shadow-5' style={{display:'flex', justifyContent:'center', flexWrap: 'wrap', backgroundColor:'#24478f'}}>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t<CountryDropdown\r\n\t\t\t\t\tclassName='pa3 ba br3 b--blue bg-lightest-blue ma2 mw5'\r\n\t\t\t          value={country}\r\n\t\t\t          onChange={(val) => this.onCountryChange(val)}\r\n\t\t\t          whitelist={supportedCountryCode}/>\r\n\t\t\t         </div>\r\n\t\t\t\t\t<div id='cities'>\r\n\t\t\t\t\t\t<select id='citySelector' className='pa3 ba br3 b--blue bg-lightest-blue ma2 mw5' onChange={this.onCityChange(val)}>\r\n\t\t\t\t\t\t\t<option value>Select City</option>\r\n\t\t\t\t\t\t</select>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default SearchBar;"]},"metadata":{},"sourceType":"module"}